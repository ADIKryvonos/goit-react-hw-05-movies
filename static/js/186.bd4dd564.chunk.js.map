{"version":3,"file":"static/js/186.bd4dd564.chunk.js","mappings":"yNA2CA,UAvCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,gHAEgBC,EAAAA,EAAAA,IAAeJ,GAF/B,mBAGa,KADfK,EAFE,EAEFA,SACIC,OAHF,sBAIF,IAAIC,MAJF,OAMVV,EAAWQ,GAND,kDAQVN,EAAS,EAAD,IARE,0DAAH,qDAWXI,GACD,GAAE,CAACH,IAEAF,GACK,2EAGP,0BACE,wBACGF,EAAQY,KAAI,YAA8B,IAA3BR,EAA0B,EAA1BA,GAAIS,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC3B,OACE,2BACE,qCAAaA,MACb,uCAAeD,OAFRT,EAKZ,OAIR,C,+LCvCKW,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,mCAAsCF,IADxD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBH,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACgBK,EADhB,YADlB,uBACGF,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAuCP,IADzD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bc,GAA9B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAxBPD,EAAAA,EAAAA,SAAAA,QAAA,+B","sources":["components/Reviews/Reviews.jsx","services/GetMovie.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getFilmReviews } from 'services/GetMovie';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const { results } = await getFilmReviews(id);\n        if (results.length === 0) {\n          throw new Error();\n        }\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  if (error) {\n    return <p>Sorry, we don't have any reviews for this film</p>;\n  }\n  return (\n    <div>\n      <ul>\n        {reviews.map(({ id, content, author }) => {\n          return (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>Character: {content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '8378c884a6341b6bb6a7cfb362550079';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport async function getTrendFilms() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getSearchFilms(query) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getFilmInfo(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["useState","reviews","setReviews","error","setError","id","useParams","useEffect","fetch","getFilmReviews","results","length","Error","map","content","author","KEY","getTrendFilms","axios","data","getSearchFilms","query","getFilmInfo","movie_id","getFilmCredits"],"sourceRoot":""}