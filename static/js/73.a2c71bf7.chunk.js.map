{"version":3,"file":"static/js/73.a2c71bf7.chunk.js","mappings":"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","sources":["components/Searcher/Searcher.styled.jsx","components/Searcher/Searcher.jsx","components/MoviesSearcherPageInfo/MoviesSearcherPageInfo.styled.jsx","components/MoviesSearcherPageInfo/MoviesSearcherPageInfo.jsx","pages/Movies.jsx","services/GetMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid orangered;\n  border-radius: 3px;\n  overflow: hidden;\n  margin: auto;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: orangered;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { Button, Form, Input } from './Searcher.styled';\n\nconst Searcher = ({ onSubmit }) => {\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const value = form.elements.name.value;\n    onSubmit(value);\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        autocomplete=\"off\"\n        placeholder=\"Search your movie ... \"\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default Searcher;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n`;\n\nexport const P = styled.p`\n  width: 300px;\n  color: black;\n  font-weight: 500;\n`;\n\nexport const HeroImg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 420px;\n  color: white;\n  background-color: grey;\n`;\n\nexport const RLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { RLink, Ul, Li, P, HeroImg } from './MoviesSearcherPageInfo.styled';\n\nconst MoviesSearcherPageInfo = ({ searchFilm }) => {\n  const location = useLocation();\n  const img = 'https://image.tmdb.org/t/p/w500';\n  // const noImage = '../../images/no-image.jpg';\n\n  return (\n    <Ul>\n      {searchFilm.map(({ title, id, poster_path }) => (\n        <Li key={id}>\n          <RLink to={`${id}`} state={{ from: location }}>\n            {poster_path ? (\n              <img\n                src={`${img}${poster_path}`}\n                width=\"300px\"\n                height=\"420px\"\n                alt={title}\n              />\n            ) : (\n              <HeroImg>No Image</HeroImg>\n            )}\n            <P>{title}</P>\n          </RLink>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nexport default MoviesSearcherPageInfo;\n","import { useEffect, useState } from 'react';\nimport Searcher from 'components/Searcher/Searcher';\nimport { getSearchFilms } from 'services/GetMovie';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesSearcherPageInfo from 'components/MoviesSearcherPageInfo/MoviesSearcherPageInfo';\n\nfunction Movies() {\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const value = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        if (value === '') {\n          return;\n        }\n        setLoading(true);\n        const { results } = await getSearchFilms(value);\n        setSearchFilm(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, [value]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Searcher onSubmit={handleSubmit} />\n      {error !== null && <div>Sorry, one more time!</div>}\n      {loading ? (\n        <Loader />\n      ) : (\n        <MoviesSearcherPageInfo searchFilm={searchFilm} />\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '8378c884a6341b6bb6a7cfb362550079';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport async function getTrendFilms() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getSearchFilms(query) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getFilmInfo(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["Form","styled","Input","Button","onSubmit","e","preventDefault","form","currentTarget","value","elements","name","reset","type","autocomplete","placeholder","Ul","Li","P","HeroImg","RLink","Link","searchFilm","location","useLocation","map","title","id","poster_path","to","state","from","src","width","height","alt","useState","setSearchFilm","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetch","getSearchFilms","results","query","Loader","KEY","getTrendFilms","axios","data","getFilmInfo","movie_id","getFilmCredits","getFilmReviews"],"sourceRoot":""}