{"version":3,"file":"static/js/736.bc0db60b.chunk.js","mappings":"iQAEaA,E,OAAKC,GAAAA,GAAH,wR,SC6Cf,EA1Ca,WACX,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,kHAEaC,EAAAA,EAAAA,IAAeJ,GAF5B,gBAEFK,EAFE,EAEFA,KACFC,EAAWD,EAAKE,OAAO,EAAG,IAChCR,EAAWO,GAJD,gDAMVE,QAAQC,IAAR,MANU,yDAAH,qDASXN,GACD,GAAE,CAACH,KAGF,0BACE,SAACL,EAAD,UACGG,EAAQY,KAAI,YAA4C,IAAzCV,EAAwC,EAAxCA,GAAIW,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAChCC,EAAQ,yCAAqCF,GAEnD,OACE,0BACoB,OAAjBA,GACC,gBAAKG,IAAI,uBAAuBC,IAAKL,EAAMM,MAAM,SAEjD,gBAAKF,IAAKD,EAAUE,IAAKL,EAAMM,MAAM,SAGvC,wBAAKN,KACL,uCAAeE,OARRb,EAWZ,OAIR,C,+LC3CKkB,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,mCAAsCF,IADxD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBH,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACgBK,EADhB,YADlB,uBACGF,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAuCP,IADzD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BqB,GAA9B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAxBPD,EAAAA,EAAAA,SAAAA,QAAA,+B","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/GetMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { getFilmCredits } from 'services/GetMovie';\nimport { useParams } from 'react-router-dom';\nimport { Ul } from './Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const { cast } = await getFilmCredits(id);\n        const mainCast = cast.splice(0, 10);\n        setCredits(mainCast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <div>\n      <Ul>\n        {credits.map(({ id, name, profile_path, character }) => {\n          const imageSrc = `https://image.tmdb.org/t/p/w500${profile_path}`;\n\n          return (\n            <li key={id}>\n              {profile_path === null ? (\n                <img src=\"/assets/no-image.jpg\" alt={name} width=\"150\"></img>\n              ) : (\n                <img src={imageSrc} alt={name} width=\"150\"></img>\n              )}\n\n              <h2>{name}</h2>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </Ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '8378c884a6341b6bb6a7cfb362550079';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport async function getTrendFilms() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getSearchFilms(query) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getFilmInfo(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["Ul","styled","useState","credits","setCredits","id","useParams","useEffect","fetch","getFilmCredits","cast","mainCast","splice","console","log","map","name","profile_path","character","imageSrc","src","alt","width","KEY","getTrendFilms","axios","data","getSearchFilms","query","getFilmInfo","movie_id","getFilmReviews"],"sourceRoot":""}