{"version":3,"file":"static/js/12.a813714b.chunk.js","mappings":"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","sources":["components/MovieDetail/MovieInfo.styled.jsx","components/FilmInfo/FilmInfo.styled.jsx","components/FilmInfo/FilmInfo.jsx","components/MovieDetail/MovieInfo.jsx","pages/MovieDetail.jsx","services/GetMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n\n  gap: 20px;\n`;\n\nexport const HeroImg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 250px;\n  height: 360px;\n  color: white;\n  background-color: grey;\n`;\nexport const ImageWrap = styled.div``;\nexport const Image = styled.img``;\nexport const InfoWrap = styled.div``;\nexport const Title = styled.h2``;\nexport const Raiting = styled.span``;\nexport const H3 = styled.h3``;\nexport const Text = styled.p``;\n\nexport const Button = styled.button``;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  display: flex;\n  padding: 0;\n  margin-top: 15px;\n  gap: 20px;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n`;\n\nexport const RLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  background-color: orangered;\n  padding: 8px 16px;\n  border-radius: 4px;\n`;\n","import { Ul, Li, RLink } from './FilmInfo.styled';\n\nconst FilmInfo = () => {\n  return (\n    <Ul>\n      <Li>\n        <RLink to=\"cast\">Cast</RLink>\n      </Li>\n      <Li>\n        <RLink to=\"reviews\">Reviews</RLink>\n      </Li>\n    </Ul>\n  );\n};\n\nexport default FilmInfo;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Button,\n  Wrap,\n  ImageWrap,\n  Image,\n  InfoWrap,\n  Title,\n  Raiting,\n  H3,\n  Text,\n  HeroImg,\n} from './MovieInfo.styled';\nimport FilmInfo from 'components/FilmInfo/FilmInfo';\n\nconst MovieInfo = ({\n  movie: {\n    poster_path,\n    title,\n    name,\n    vote_average,\n    release_date,\n    overview,\n    genres = [],\n    first_air_date,\n  },\n  error,\n}) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const imageSrc = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <Wrap>\n      <Link to={backLinkHref}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n\n      <ImageWrap>\n        {poster_path ? (\n          <Image src={imageSrc} alt={title || name} width=\"250px\"></Image>\n        ) : (\n          <HeroImg>No Image</HeroImg>\n        )}\n      </ImageWrap>\n      <InfoWrap>\n        <Title>\n          {title}({release_date || first_air_date})\n        </Title>\n        <Raiting>User score: {vote_average}</Raiting>\n        <H3>Overview</H3>\n        <Text>{overview}</Text>\n        <H3>Genres</H3>\n        <Text>\n          {genres.map(({ name }) => {\n            return `${name} `;\n          })}\n        </Text>\n        {!error && <FilmInfo />}\n      </InfoWrap>\n    </Wrap>\n  );\n};\n\nexport default MovieInfo;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmInfo } from 'services/GetMovie';\nimport MovieInfo from 'components/MovieDetail/MovieInfo';\nimport { Outlet } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetail = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoading(true);\n        const results = await getFilmInfo(id);\n        setMovie(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <>\n      {error && <div>Sorry, smth wrone! Try again</div>}\n      {loading ? <Loader /> : <MovieInfo movie={movie} error={error} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetail;\n","import axios from 'axios';\n\nconst KEY = '8378c884a6341b6bb6a7cfb362550079';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport async function getTrendFilms() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getSearchFilms(query) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getFilmInfo(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getFilmReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["Wrap","styled","HeroImg","ImageWrap","Image","InfoWrap","Title","Raiting","H3","Text","Button","Ul","Li","RLink","Link","to","movie","poster_path","title","name","vote_average","release_date","overview","genres","first_air_date","error","backLinkHref","useLocation","state","from","imageSrc","type","src","alt","width","map","useState","setMovie","setError","loading","setLoading","id","useParams","useEffect","fetch","getFilmInfo","results","Loader","Suspense","fallback","KEY","getTrendFilms","axios","data","getSearchFilms","query","movie_id","getFilmCredits","getFilmReviews"],"sourceRoot":""}